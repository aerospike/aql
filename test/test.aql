# INSERT INTO test.demo(PK, "bin\"one") values (1,1)


INSERT INTO test.demo (PK, binint, bindouble, binstring, bingeo, bincastgeo, binmap, binjsonmap, bincastmap, binlist, binjsonlist, bincastlist, bindoc, binblob, binNull, "~!@#_bin_$%^&*", binempty, "s p a c e") values ('all_key', 1, 1.2, "string", GEOJSON('{"type": "Point", "coordinates": [123.4, -456.7]}'), CAST('{"type": "Point", "coordinates": [123.4, -456.7]}' AS GEOJSON), MAP('{"a": 1, "b": 2}'), JSON('{"a": 1, "b": 2}'), CAST('{"a": 1, "b": 2}' AS MAP), LIST('[1,2,3]'), JSON('[1,2,3]'), CAST('[1,2,3]' AS LIST), JSON('{"a":[1,2,3,{"a":"b"},{"a":[1,2]}]}'), CAST('asfafasfasfasfasfasfasfasfasfasfasfasfasfsfafasfasfasfasdf' AS TEXT), NULL, "__.\asd%!@#$%#$%^^", "", "     ")

DELETE FROM test.demo WHERE PK = 'key1'
DELETE FROM test.demo WHERE PK = 'all_keys'
DELETE FROM test.testset where DIGEST='139FE89822B63DFC173AEA51CCF2EF091AB3129F'
DELETE from test.testset where EDIGEST='E5/omCK2PfwXOupRzPLvCRqzEp8='

INSERT INTO test.demo (PK, binint, bindouble, binstring, bingeo, bincastgeo, binmap, binjsonmap, bincastmap, binlist, binjsonlist, bincastlist, bindoc, binblob, binNull, "~!@#_bin_$%^&*", binempty, "s p a c e") values ('all_key', 1, 1.2, "string", GEOJSON('{"type": "Point", "coordinates": [123.4, -456.7]}'), CAST('{"type": "Point", "coordinates": [123.4, -456.7]}' AS GEOJSON), MAP('{"a": 1, "b": 2}'), JSON('{"a": 1, "b": 2}'), CAST('{"a": 1, "b": 2}' AS MAP), LIST('[1,2,3]'), JSON('[1,2,3]'), CAST('[1,2,3]' AS LIST), JSON('{"a":[1,2,3,{"a":"b"},{"a":[1,2]}]}'), CAST('asfafasfasfasfasfasfasfasfasfasfasfasfasfsfafasfasfasfasdf' AS TEXT), NULL, "__.\asd%!@#$%#$%^^", "", "     ")

REGISTER PACKAGE './test/lua/test1.lua'
SHOW PACKAGES
DESC PACKAGE test1.lua
REMOVE PACKAGE test1.lua
REGISTER PACKAGE 'example/lua/test1.lua'
EXECUTE test1.foo() on test.demo where PK="all_keys"
EXECUTE test1.foo("a",1) on test.demo where PK="all_keys"
EXECUTE test1.foo("a",1) on test.demo
EXECUTE test1.foo("a",1) on test.demo where binint = 1

SELECT * FROM test.demo
SELECT * FROM test.demo WHERE PK = 'all_key'
SELECT binint, binstring FROM test.demo WHERE PK = 'all_key'
SELECT binmap, bincastlist FROM test.demo WHERE PK = 'all_key'
SELECT bingeo, binblob FROM test.demo WHERE binint = 1
SELECT binjsonmap, bindoc FROM test.demo WHERE binstring = 'string'
SELECT bincastgeo, binNull FROM test.demo WHERE binint BETWEEN 0 AND 999
SELECT "s p a c e", "~!@#_bin_$%^&*" FROM test.demo IN LIST WHERE binlist = 1
SELECT "s p a c e", "~!@#_bin_$%^&*" FROM test.demo IN LIST WHERE binlist between 0 and 4
SELECT binjsonmap, binint FROM test.demo IN MAPKEYS WHERE binmap = "a"
SELECT binjsonmap, binint FROM test.demo IN MAPVALUES WHERE bincastmap between 10 and 20
SELECT * FROM test.demo WHERE bingeo CONTAINS CAST('{"type": "Point", "coordinates": [0.0, 0.0]}' AS GEOJSON)
SELECT * FROM test.demo where DIGEST='6A58EAF8DAD4CF0CCBBF16FA1F77B8D5DE692449'
SELECT * FROM test.demo where EDIGEST='t/S4OIni2mfeaD4d9pGaHqzERsg='

EXPLAIN SELECT * FROM test.demo WHERE PK=1
EXPLAIN SELECT * FROM test.demo where DIGEST='6A58EAF8DAD4CF0CCBBF16FA1F77B8D5DE692449'
EXPLAIN SELECT * FROM test.demo where EDIGEST='t/S4OIni2mfeaD4d9pGaHqzERsg='

EXPLAIN SELECT binjsonmap, binint FROM test.demo IN MAPKEYS WHERE binmap = "a"

# CREATE INDEX numindex ON test.newtest (b) NUMERIC
# CREATE INDEX strindex ON test.newtest (c) STRING

INSERT INTO test.newtest (PK,a,b,c) VALUES ('rec1',5,3,'bac')
INSERT INTO test.newtest (PK,a,b,c) VALUES ('rec2',3,3,'kkc')
INSERT INTO test.newtest (PK,a,b,c) VALUES ('rec3',5,8,'bcj')
INSERT INTO test.newtest (PK,a,b,c) VALUES ('rec4',3,7,'bbh')
INSERT INTO test.newtest (PK,a,b,c) VALUES ('rec5',1,3,'akl')
INSERT INTO test.newtest (PK,a,b,c) VALUES ('rec6',6,4,'adc')
INSERT INTO test.newtest (PK,a,b,c) VALUES ('rec7',9,1,'auc')
INSERT INTO test.newtest (PK,a,b,c) VALUES ('rec8',2,9,'adc')
INSERT INTO test.newtest (PK,a,b,c) VALUES ('rec9',5,3,'lnm')
INSERT INTO test.newtest (PK,a,b,c) VALUES ('rec10',2,3,'mnm')
INSERT INTO test.newtest (PK,a,b,c) VALUES ('rec11',4,3,'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')
AGGREGATE test2.sum_even_a() ON test.newtest WHERE b = 3
AGGREGATE test2.sum_even_a("a", 1) ON test.newtest WHERE b = 3

# DROP INDEX test numindex
# DROP INDEX test strindex


# ENTERPRISE
SET DURABLE_DELETE true

SET TIMEOUT 100

SHOW NAMESPACES
SHOW SETS
SHOW BINS
SHOW INDEXES
SHOW MODULES; SHOW PACKAGES
SHOW MODULES
